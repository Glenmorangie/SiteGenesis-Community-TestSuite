<?xml version="1.0" encoding="UTF-8"?>
<testcase xmlns="http://xlt.xceptance.com/xlt-script/2" version="6">
  <description>Test select, deselect, clear and remove size refinement on catalog page.

# 1. Setup and preparation

- Start session, open homepage and delete all visible cookies
- Browse to category page

# 2. Scope of test

- Select size refinement by random position
- Validate that refined size is selectable on random quickview
- *Deselect* size refinement


- Select two size refinements by random position
- Validate that refined sizes are selectable on random quickview
- *Clear* size refinement

 
- Select size refinement by random position
- *Deselect* size refinement via breadcrumb</description>
  <codecomment># Setup</codecomment>
  <module name="modules.helper.FHelper_Session_flowToStartSession"/>
  <action name="GoToCategoryPage"/>
  <module name="modules.global.headerfooternav.MGlobal_Nav_clickGoToCategoryLevel2">
    <parameter name="positionLevel1" value="${positionCategoryLevel1}"/>
    <parameter name="positionLevel2" value="${positionCategoryLevel2}"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_validatePage"/>
  <codecomment># Scope</codecomment>
  <codecomment>## Validate that no size is selected</codecomment>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateNoSizeRefinementIsSelected"/>
  <codecomment>## Refine size by random position, check quickview, *Deselect* refinement</codecomment>
  <action name="RefineSize"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickSizeByPositionRandom">
    <parameter name="size_varName" value="sizeRandom_01_varDynamic"/>
    <parameter name="sizePosition_varName" value="sizeRandomPosition_01_varDynamic"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateBreadcrumbByPosition">
    <parameter name="position" value=":last-of-type"/>
    <parameter name="value" value="${sizeRandom_01_varDynamic}"/>
  </module>
  <action name="OpenQuickView"/>
  <module name="modules.pages.catalog.MCatalog_clickQuickViewRandomly"/>
  <module name="modules.pages.product.VProduct_validateSizeIsSelectable">
    <parameter name="size_01" value="${sizeRandom_01_varDynamic}"/>
    <parameter name="size_02" value=""/>
  </module>
  <module name="modules.pages.product.productquickview.MProductQV_closeQuickview"/>
  <action name="DeselectSizeRefinement"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_removeFirstSelected"/>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateNoSizeRefinementIsSelected"/>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateRefinementListIsEmpty"/>
  <codecomment>## Refine by two random positions, check quickview, *Clear* refinement</codecomment>
  <action name="RefineSize"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickSizeByPositionRandom">
    <parameter name="size_varName" value="sizeRandom_01_varDynamic"/>
    <parameter name="sizePosition_varName" value="sizeRandomPosition_01_varDynamic"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateBreadcrumbByValue">
    <parameter name="title" value="${sizeRandom_01_varDynamic}"/>
  </module>
  <action name="RefineSize"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickSizeByPositionRandom">
    <parameter name="size_varName" value="sizeRandom_02_varDynamic"/>
    <parameter name="sizePosition_varName" value="sizeRandomPosition_02_varDynamic"/>
  </module>
  <codecomment>Detect breadcrumb size order depending on refinement order</codecomment>
  <command name="storeEval" target="(${sizeRandomPosition_01_varDynamic} &lt; ${sizeRandomPosition_02_varDynamic}) ? &quot;${sizeRandom_01_varDynamic}&quot; : &quot;${sizeRandom_02_varDynamic}&quot;" value="breadcrumb_size_01_varDynamic">
    <comment>Detect first size refinement in breadcrumb, expect the same order as it is shown in secondary navigation.</comment>
  </command>
  <command name="storeEval" target="(${sizeRandomPosition_02_varDynamic} &gt;= ${sizeRandomPosition_01_varDynamic}) ? &quot;${sizeRandom_02_varDynamic}&quot; : &quot;${sizeRandom_01_varDynamic}&quot;" value="breadcrumb_size_02_varDynamic">
    <comment>Detect second size refinement in breadcrumb, expect the same order as it is shown in secondary navigation. Please note, that if the second selected size position is the same as the first position, the second value should be displayed behind the first value, because the position is based on selectable values. </comment>
  </command>
  <codecomment>Validate breadcrumb values by position</codecomment>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateBreadcrumbByPosition">
    <parameter name="position" value=":nth-of-type(2)"/>
    <parameter name="value" value="${breadcrumb_size_01_varDynamic}"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateBreadcrumbByPosition">
    <parameter name="position" value=":nth-of-type(3)"/>
    <parameter name="value" value="${breadcrumb_size_02_varDynamic}"/>
  </module>
  <action name="OpenQuickView"/>
  <module name="modules.pages.catalog.MCatalog_clickQuickViewRandomly"/>
  <module name="modules.pages.product.VProduct_validateSizeIsSelectable">
    <parameter name="size_01" value="${sizeRandom_01_varDynamic}"/>
    <parameter name="size_02" value="${sizeRandom_02_varDynamic}"/>
  </module>
  <module name="modules.pages.product.productquickview.MProductQV_closeQuickview"/>
  <action name="ClearSize"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickClearSizeRefinement"/>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateRefinementListIsEmpty"/>
  <codecomment>## Refine size by random position, *Deselect* via breadcrumb</codecomment>
  <action name="RefineSize"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickSizeByPositionRandom">
    <parameter name="size_varName" value="sizeRandom_01_varDynamic"/>
    <parameter name="sizePosition_varName" value="sizeRandomPosition_01_varDynamic"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateBreadcrumbByPosition">
    <parameter name="position" value=":last-of-type"/>
    <parameter name="value" value="${sizeRandom_01_varDynamic}"/>
  </module>
  <action name="RemoveSizeRefinementViaBreadcrumb"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickRemoveFilterByPosition">
    <parameter name="position" value="1"/>
    <parameter name="breadcrumbRefinementValueCount" value="0"/>
  </module>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateNoSizeRefinementIsSelected"/>
  <module name="modules.pages.catalog.VCatalog_Refinement_validateRefinementListIsEmpty"/>
</testcase>